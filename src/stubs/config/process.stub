<?php

use support\Log;
use support\Request;
use app\process\Http;

global $argv;

$processes = [];

$processes[env('APP_ALIAS', 'server')] = [
    'handler' => Http::class,
    'listen' => 'http://0.0.0.0:' . env('APP_PORT', 8787),
    'count' => cpu_count() * env('APP_PROCESS_CPU_SCALE', 4),
    'user' => '',
    'group' => '',
    'reusePort' => false,
    'eventLoop' => '',
    'context' => [],
    'constructor' => [
        'requestClass' => Request::class,
        'logger' => Log::channel('default'),
        'appPath' => app_path(),
        'publicPath' => public_path()
    ]
];

if (env('APP_DEBUG', false)) {
    $processes['monitor'] = [
        'handler' => app\process\Monitor::class,
        'reloadable' => false,
        'constructor' => [
            // Monitor these directories
            'monitorDir' => array_merge([
                app_path(),
                config_path(),
                base_path() . '/process',
                base_path() . '/support',
                base_path() . '/resource',
                base_path() . '/.env',
            ], glob(base_path() . '/plugin/*/app'), glob(base_path() . '/plugin/*/config'), glob(base_path() . '/plugin/*/api')),
            // Files with these suffixes will be monitored
            'monitorExtensions' => [
                'php', 'html', 'htm', 'env'
            ],
            'options' => [
                'enable_file_monitor' => !in_array('-d', $argv) && DIRECTORY_SEPARATOR === '/',
                'enable_memory_monitor' => DIRECTORY_SEPARATOR === '/',
            ]
        ]
    ];
}

return $processes;
